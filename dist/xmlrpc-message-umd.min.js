/*!
* xmlrpc-message-umd
*
* @link https://github.com/T1st3/xmlrpc-message-umd
* @author T1st3
* @version 1.0.0
* @license https://github.com/T1st3/xmlrpc-message-umd/blob/master/LICENSE
*
*
* This AMD module is based on an XMLRPC message formatter written by Scott Andrew LePera
*
* Original work:
* Copyright 2001 Scott Andrew LePera
* scott@scottandrew.com
* http://www.scottandrew.com/xml-rpc
*
* Original License:
* You are granted the right to use and/or redistribute this
* code only if this license and the copyright notice are included
* and you accept that no warranty of any kind is made or implied
* by the author.
*
*/
"use strict";!function(root,factory){"function"==typeof define&&define.amd?define([],factory):"object"==typeof exports?module.exports=factory():root.XMLRPCMessage=factory()}(this,function(){var XMLRPCMessage=function(method){return method&&this.setMethod(method),this.params=[],this};return XMLRPCMessage.prototype.setMethod=function(methodName){return methodName?(this.method=methodName,this):this},XMLRPCMessage.prototype.addParameter=function(data,type){return 0===arguments.length?this:(this.params[this.params.length]={data:data,type:type},this)},XMLRPCMessage.prototype.xml=function(){var xml="",i=0,obj={},data=null;for(xml+="<?xml version='1.0'?>\n",xml+="<methodCall>\n",xml+="<methodName>"+this.method+"</methodName>\n",xml+="<params>\n",i=0;i<this.params.length;i++)obj=this.params[i],data=obj.data,xml+="<param>\n",xml+="<value>",xml+=obj.type?XMLRPCMessage.getParamXML(data,XMLRPCMessage.dataTypeOf(data,obj.type)):XMLRPCMessage.getParamXML(data,XMLRPCMessage.dataTypeOf(data)),xml+="</value>\n",xml+="</param>\n";return xml+="</params>\n",xml+="</methodCall>"},XMLRPCMessage.dataTypeOf=function(o,forceType){if(forceType)return forceType;if(!o&&o!==!1)return!1;var type=typeof o,con=null;switch(type=type.toLowerCase()){case"number":type=Math.round(o)===o?"int":"double";break;case"object":con=o.constructor,type=con===Date?"date":con===Array?"array":"struct"}return type},XMLRPCMessage.doValueXML=function(data,type){if(!data)return"";var xml="<"+type+">"+data+"</"+type+">";return xml},XMLRPCMessage.doBooleanXML=function(data){if(!data&&data!==!1)return"";var value=data===!0?1:0;return"<boolean>"+value+"</boolean>"},XMLRPCMessage.doDateXML=function(data){if(!data)return"";var xml="<dateTime.iso8601>";return xml+=XMLRPCMessage.dateToISO8601(data),xml+="</dateTime.iso8601>"},XMLRPCMessage.doBase64XML=function(data){if(!data)return"";var xml="<base64>";return xml+=data,xml+="</base64>"},XMLRPCMessage.doArrayXML=function(data){if(!data)return"";var xml="<array><data>\n",i=0;for(i=0;i<data.length;i++)xml+="<value>",xml+="object"==typeof data[i]&&data[i].type&&data[i].val?XMLRPCMessage.getParamXML(data[i].val,data[i].type):XMLRPCMessage.getParamXML(data[i],XMLRPCMessage.dataTypeOf(data[i])),xml+="</value>\n";return xml+="</data></array>\n"},XMLRPCMessage.doStructXML=function(data){if(!data)return"";var xml="<struct>\n",i=0;for(i in data)xml+="<member>\n",xml+="<name>"+i+"</name>\n",xml+="<value>",xml+="object"==typeof data[i]&&data[i].type&&data[i].val?XMLRPCMessage.getParamXML(data[i].val,data[i].type):XMLRPCMessage.getParamXML(data[i],XMLRPCMessage.dataTypeOf(data[i])),xml+="</value>\n",xml+="</member>\n";return xml+="</struct>\n"},XMLRPCMessage.getParamXML=function(data,type){if(!data&&data!==!1)return!1;type||(type="string");var xml;switch(type){case"base64":xml=XMLRPCMessage.doBase64XML(data);break;case"date":xml=XMLRPCMessage.doDateXML(data);break;case"array":xml=XMLRPCMessage.doArrayXML(data);break;case"struct":xml=XMLRPCMessage.doStructXML(data);break;case"boolean":xml=XMLRPCMessage.doBooleanXML(data);break;default:xml=XMLRPCMessage.doValueXML(data,type)}return xml},XMLRPCMessage.dateToISO8601=function(date){if(!date)return!1;if("object"!=typeof date||!(date instanceof Date))return!1;var year=date.getYear().toString(),month=XMLRPCMessage.leadingZero(date.getMonth().toString()),day=XMLRPCMessage.leadingZero(date.getDate().toString()),time=XMLRPCMessage.leadingZero(date.getHours().toString()),converted="";return time+=":"+XMLRPCMessage.leadingZero(date.getMinutes().toString()),time+=":"+XMLRPCMessage.leadingZero(date.getSeconds().toString()),converted=year+month+day+"T"+time},XMLRPCMessage.leadingZero=function(n){return n?"number"!=typeof n&&"string"!=typeof n?!1:(1===n.length&&(n="0"+n),n):!1},XMLRPCMessage});
//# sourceMappingURL=xmlrpc-message-umd.min.js.map
